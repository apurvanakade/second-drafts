---
title: "Plotly Slider Example"
format: html
jupyter: myenv
execute: 
  echo: false
---


```{python}
import numpy as np
import plotly.graph_objects as go

N = 100
x_vals = np.arange(N + 1)
y_vals = np.arange(N + 1)

fig = go.Figure()

# Initial red dot
fig.add_trace(go.Scatter(
    x=[x_vals[0]],
    y=[y_vals[0]],
    mode='markers',
    marker=dict(size=12, color='red'),
    name='dot'
))

# X-axis slider steps
x_steps = [
    dict(method='restyle', args=[{'x': [[x]]}], label=str(x)) for x in x_vals
]

# Y-axis slider steps
y_steps = [
    dict(method='restyle', args=[{'y': [[y]]}], label=str(y)) for y in y_vals
]

# Add both sliders (visually separated by y position)
fig.update_layout(
    title='Red Dot Controlled by X and Y Sliders on Static Grid',
    xaxis=dict(
        range=[0, N],
        showgrid=True,  # Ensure the grid is shown
        gridcolor='lightgray',  # Color for grid lines
        gridwidth=1,  # Width of grid lines
        zeroline=False  # Optional: To disable the zero line if needed
    ),
    yaxis=dict(
        range=[0, N],
        showgrid=True,  # Ensure the grid is shown
        gridcolor='lightgray',  # Color for grid lines
        gridwidth=1,  # Width of grid lines
        zeroline=False  # Optional: To disable the zero line if needed
    ),
    height=800,
    sliders=[
        dict(
            active=0,
            steps=x_steps,
            x=0,
            y=0,  # lower slider
            name='x-slider',
            pad=dict(t=50)
        ),
        dict(
            active=0,
            steps=y_steps,
            x=0,
            y=-0.15,  # upper slider
            name='y-slider',
            pad=dict(t=50)
        )
    ]
)

fig.show()
```